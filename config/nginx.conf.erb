# Disable "daemon" mode, which causes nginx to run in the foreground
daemon off;

# Define the number of worker processes (Heroku dynos have at least 4 cores)
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    # Explicitly force nginx to use the "epoll" connection processing method
    # (see http://nginx.org/en/docs/events.html)
	use epoll;

	accept_mutex on;

	# Set the maximum number of simultaneous connections that can be opened by a worker process
	worker_connections 2048;
}

http {
    # Disable emitting nginx version on error pages and in the “Server” response header field
	server_tokens off;

	# Disable access logs, since our axum application logs them too
	access_log /dev/null;
	# Write error logs to the default `heroku-buildpack-nginx` location
	error_log logs/nginx/error.log;

    # Define common file name extension to MIME type mappings
	include mime.types;
    # Define the default MIME type of a response if none of the mappings from above match
	default_type application/octet-stream;

	# Enable the use of the `sendfile` Linux API for sending files over the network
	sendfile on;

    # Set the maximum allowed size of the client request body to 50 MB
	client_max_body_size 50m;

	upstream app_server {
		server localhost:8888 fail_timeout=0;
	}

	server {
		listen <%= ENV["PORT"] %>;

		# Set a catch-all server name (see http://nginx.org/en/docs/http/server_names.html)
		server_name _;

        # Set a timeout during which a keep-alive client connection will stay open on the server side
		keepalive_timeout 5;

        # Use the passed-in `Host` header for proxied requests instead of changing it to the `proxy_pass` value
		proxy_set_header Host $http_host;

		# Disable `Location` and `Refresh` header rewriting for proxied responses
		proxy_redirect off;

        # If the `X-Forwarded-Proto` request header does not contain `https` …
		if ($http_x_forwarded_proto != 'https') {
		    # … return a "301 Moved Permanently" response to the HTTPS equivalent URL
			rewrite ^ https://$host$request_uri? permanent;
		}

        location / {
            # Proxy all requests to our axum app server
            proxy_pass http://app_server;
        }
	}
}
